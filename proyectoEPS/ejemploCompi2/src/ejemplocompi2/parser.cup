package ejemplo;
import java_cup.runtime.Symbol;

parser code {:
        public parser(AnalizadorLexico lex) { 
            super(lex);   
	}
        public void syntax_error(Symbol s){
            System.out.println("ERROR: "+" Error Sintaxis token: " + s.value);
        }
        public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
            
        }
        
:}

/* Terminals (tokens returned by the scanner). */
terminal           MAS, MENOS,POR, DIV, IGUAL, LETRAX, LETRAY, LETRAZ, COMA, PUNTOYCOMA;
terminal Integer   NUMERO;
/* Non-terminals */
non terminal            P,Z;
non terminal Integer X,T,F;

precedence left MAS, MENOS; 
precedence left POR, DIV;

/* The grammar */
start with P;

P ::=  Z X ;

Z ::= LETRAX IGUAL NUMERO COMA:a LETRAY IGUAL NUMERO:b COMA LETRAZ IGUAL NUMERO:c PUNTOYCOMA ;

X ::= X:a MAS T:b {:RESULT=a+b;:}
    | X:a MENOS T:b {:RESULT=a-b;:}
    | T:a {:RESULT=a;:}
;

T ::= F:a POR F:b {:RESULT=a*b;:}
    | F:a DIV F:b {:RESULT=a/b;:}
    | F:a {:RESULT=a;:}
;

F ::= NUMERO:e {:RESULT=e;:}
;